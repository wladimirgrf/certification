service: certification

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1
  lambdaHashingVersion: 20200924
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"

custom: 
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      

functions:
  generateCertificate:
    handler: src/functions/generateCertificate.handle
    events:
      - httpApi: 'POST /certificate'
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/users_certificates"
  verifyCertificate:
    handler: src/functions/verifyCertificate.handle
    events:
      - httpApi: 'GET /certificate/{id}'
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/users_certificates"

resources:
  Resources:
    dbCertificateUsers: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users_certificates
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema: 
          - AttributeName: id
            KeyType: HASH

package:
    include:
      - src/templates

